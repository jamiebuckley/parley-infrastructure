AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys the ECS cluster for Parley
Parameters:
  ECSAMI:
    Description: ECS-Optimized AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux/recommended/image_id
  Subnets:
    Description: Subnets for ECS cluster
    Type: List<AWS::EC2::Subnet::Id>
  LBSecurityGroup:
    Description: Security group for load balancer
    Type: String
Resources:
  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: ParleyCluster
  ECSAutoScalingGroup:
    DependsOn: ECSCluster
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref ECSLaunchConfiguration
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
      Tags:
        - Key: Name
          Value: ECS host
          PropagateAtLaunch: true
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: vpc-7648db1e
      GroupDescription: Access to the ECS hosts and the tasks/containers that run on them
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref LBSecurityGroup
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub ECS-Hosts
  ECSLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: !Ref ECSAMI
      InstanceType: "t2.nano"
      IamInstanceProfile: !Ref ECSInstanceProfile
      KeyName: ecs_key
      SecurityGroups:
        - !Ref ECSSecurityGroup
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash
          echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
          yum install -y https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
          yum install -y aws-cfn-bootstrap hibagent
          /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSLaunchConfiguration
          /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource ECSAutoScalingGroup
          /usr/bin/enable-ec2-spot-hibernation
  ECSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ECSRole
  ECSRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: parley-ec2-cluster-role
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                    "Service": "ec2.amazonaws.com"
                }
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Policies:
        - PolicyName: ecs-service
          PolicyDocument: |
            {
                "Statement": [{
                    "Effect": "Allow",
                    "Action": [
                        "ecs:CreateCluster",
                        "ecs:DeregisterContainerInstance",
                        "ecs:DiscoverPollEndpoint",
                        "ecs:Poll",
                        "ecs:RegisterContainerInstance",
                        "ecs:StartTelemetrySession",
                        "ecs:Submit*",
                        "ecr:BatchCheckLayerAvailability",
                        "ecr:BatchGetImage",
                        "ecr:GetDownloadUrlForLayer",
                        "ecr:GetAuthorizationToken"
                    ],
                    "Resource": "*"
                }]
            }
Outputs:
  Name:
    Description: The name of the ECS cluster
    Value: !Ref ECSCluster
